<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SwivelAcademyAPI</name>
    </assembly>
    <members>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.CreateStudent(SwivelAcademyAPI.Models.StudentModel)">
            <summary>
            End point to Create a Student Profile
            </summary>
            <param name="studModel"></param>
            <returns>"Successfully Created" if successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.updateStudent(System.Int32,SwivelAcademyAPI.Models.StudentModelDto)">
            <summary>
            End point to Update a Student record
            </summary>
            <param name="studentId"></param>
            <param name="studentDto"></param>
            <returns>"Updated Successfully" if update was successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.GetStudentById(System.Int32)">
            <summary>
            End point to Get a Student
            </summary>
            <param name="studentId"></param>
            <returns>A student object</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.GetAllStudents">
            <summary>
            End point to Get all Students
            </summary>
            <param></param>
            <returns>A List of students</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.DeleteStudentById(System.Int32)">
            <summary>
            End point to Delete a Student
            </summary>
            <param name="studentId"></param>
            <returns>Successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.RegisterCourse(SwivelAcademyAPI.Models.RegisterCourseModel)">
            <summary>
            End point to Register For a course
            </summary>
            <param name="regCourse"></param>
            <returns>"Successfully Created" if successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.StudentController.GetAllCoursesByStudent(System.Int32)">
            <summary>
            End point to Get all Courses registered by a Students
            </summary>
            <param name="studentId"></param>
            <returns>A List of Courses</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.CreateCourse(SwivelAcademyAPI.Models.DTOs.CourseModelDto)">
            <summary>
            End point to create a Course
            </summary>
            <param name="cModel"></param>
            <returns>"Successfully Created" if successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.updateCourse(System.Int32,SwivelAcademyAPI.Models.DTOs.CourseModelDto)">
            <summary>
            End point to Update a Course
            </summary>
            <param name="courseId"></param>
            <param name="courseDto"></param>
            <returns>"Updated Successfully" if update was successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.GetCourseById(System.Int32)">
            <summary>
            End point to Get a Course by courseId
            </summary>
            <param name="courseId"></param>
            <returns>A course object</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.GetAllCourses">
            <summary>
            End point to Get all Courses
            </summary>
            <param></param>
            <returns>A List of course objects</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.DeleteCourseById(System.Int32)">
            <summary>
            End point to Delete a Course
            </summary>
            <param name="courseId"></param>
            <returns>Successfully deleted</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.AddTeacher(SwivelAcademyAPI.Models.TeacherModelDto)">
            <summary>
            End point to Create a Teacher record
            </summary>
            <param name="tModel"></param>
            <returns>"Successfully Created" if successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.UpdateTeacher(System.Int32,SwivelAcademyAPI.Models.TeacherModelDto)">
            <summary>
            End point to Update a Teacher record
            </summary>
            <param name="teacherId"></param>
            <param name="teacherDto"></param>
            <returns>"Updated Successfully" if update was successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.GetTeacherById(System.Int32)">
            <summary>
            End point to Get a Teacher by teacherId
            </summary>
            <param name="teacherId"></param>
            <returns>A course object</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.GetAllTeachers">
            <summary>
            End point to Get all Teachers
            </summary>
            <param></param>
            <returns>A List of Teacher objects</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.DeleteTeacherById(System.Int32)">
            <summary>
            End point to Delete a Teacher Record
            </summary>
            <param name="teacherId"></param>
            <returns>Successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.TeachCourse(SwivelAcademyAPI.Models.TeachCourseModel)">
            <summary>
            End point for Teacher to Register to take a course
            </summary>
            <param name="teachCourse"></param>
            <returns>"Successfully Created" if successful</returns>
        </member>
        <member name="M:SwivelAcademyAPI.Controllers.TeacherController.GetAllTaughtCoursesByTeacher(System.Int32)">
            <summary>
            End point to Get all Courses taught by a teacher
            </summary>
            <param name="teacherId"></param>
            <returns>A List of Courses</returns>
        </member>
    </members>
</doc>
